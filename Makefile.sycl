# Using CodePlay ComputeCpp compiler, and depends on POCL OpenCL library
#   hence, depends on .bashrc.computecpp and .bashrc.pocl
# Also uses CUDA OpenCL headers and links against its OpenCL.so, 
#   but LD_LIBRARY_PATH pulls in POCL at runtime
CFLAGS = -O2 -std=c++14 -ffast-math
CFLAGS += -mllvm -inline-threshold=1000 -sycl-driver -sycl-target spirv64 -no-serial-memop

INCLUDES = -DITERATIONS=1 -DLDIM=32 -DUSE_SYCL -I${SYCL_HOME}/include
INCLUDES += -I${CUDA_ROOT}/include
#INCLUDES += -DLAT_CHECK

LIBS = -L${SYCL_HOME}/lib -lComputeCpp 
LIBS += -L${CUDA_ROOT}/lib64 -lOpenCL

DEPENDS = su3.h lattice.hpp mat_nn_sycl.hpp

# 32-bit float
bench_f32_sycl.exe: su3_nn_bench.cpp $(DEPENDS)
	compute++ ${CFLAGS} ${INCLUDES} -DPRECISION=1 su3_nn_bench.cpp -o $@ ${LIBS}

# 64-bit float
bench_f64_sycl.exe: su3_nn_bench.cpp $(DEPENDS)
	compute++ ${CFLAGS} ${INCLUDES} su3_nn_bench.cpp -o $@ ${LIBS}

all: bench_f32_sycl.exe bench_f64_sycl.exe

clean:
	rm -rf *sycl.exe
